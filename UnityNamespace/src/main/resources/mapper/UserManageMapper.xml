<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.supos.uns.dao.mapper.UserManageMapper" >

    <select id="userManageList" resultType="com.supos.common.vo.UserManageVo">

        SELECT u.*,u.username AS preferredUsername,
        STRING_AGG(r.name, ', ') AS roleList
        FROM user_entity u
        JOIN user_role_mapping urm ON urm.user_id = u.id
        JOIN keycloak_role r ON urm.role_id = r.id
        where
        u.realm_id = (SELECT id FROM realm WHERE name = #{realm})
        and u.service_account_client_link is null
        <if test="preferredUsername != null and preferredUsername != ''">
            and u.username LIKE CONCAT('%', #{preferredUsername}, '%')
        </if>
        <if test="firstName != null and firstName != ''">
            and u.first_name LIKE CONCAT('%', #{firstName}, '%')
        </if>
        <if test="email != null and email != ''">
            and u.email = #{email}
        </if>
        <if test="enabled != null">
            and u.enabled = #{enabled}
        </if>
        <if test="roleName != null and roleName != ''">
            and r.name = #{roleName}
        </if>
        GROUP BY u.id  ORDER BY created_timestamp ASC

    </select>

    <select id="roleListByUserId" resultType="com.supos.common.dto.auth.RoleDto">
        SELECT
            ue.id AS user_id,
            ue.username AS user_name,
            ue.enabled,
            r.id AS role_id,
            r.name AS role_name,
            r.description AS role_description
        FROM
            user_entity ue
                JOIN
            user_role_mapping urm ON ue.id = urm.user_id
                JOIN
            keycloak_role r ON urm.role_id = r.id
        WHERE
            ue.id = #{userId}
          AND ue.realm_id = (SELECT id FROM realm WHERE name = #{realm})
          AND r.client IS NOT NULL
    </select>


    <select id="userList" resultType="com.supos.common.vo.UserManageVo">
        select id, username AS preferredUsername from user_entity where realm_id = '8920b375-d705-4d30-8a71-52d9c14ec4ba' and username != 'service-account-supos'
    </select>


    <select id="getNotInitializedLdapUsers" resultType="com.supos.common.vo.UserManageVo">
        SELECT u.id , u.username as preferredUsername
        FROM user_entity u
                 JOIN realm r ON u.realm_id = r.id
        WHERE u.federation_link IS NOT NULL
          AND r.name = 'supos'
          AND NOT EXISTS (
            SELECT 1 FROM user_role_mapping urm
                              JOIN keycloak_role ro ON ro.id = urm.role_id
            WHERE urm.user_id = u.id
              AND ro.name = 'ldap-initialized'
        )
    </select>

    <select id="userOpenapiList" resultType="com.supos.uns.openapi.vo.UserDetailVo">

        SELECT * from (
        SELECT u.*,u.first_name as displayName,
        STRING_AGG(r.name, ', ') AS roleList,
        (SELECT attr.value as phone from user_attribute attr where attr.user_id = u.id and attr.name = 'phone')
        FROM user_entity u
        JOIN user_role_mapping urm ON urm.user_id = u.id
        JOIN keycloak_role r ON urm.role_id = r.id
        where
        u.realm_id = (SELECT id FROM realm WHERE name ='supos')
        and u.service_account_client_link is null
        GROUP BY u.id  ORDER BY created_timestamp ASC
        )  where 1 =1

        <if test="params.username != null and params.username != ''">
            and username = #{params.username}
        </if>
        <if test="params.displayName != null and params.displayName != ''">
            and first_name LIKE CONCAT('%', #{params.displayName}, '%')
        </if>
        <if test="params.email != null and params.email != ''">
            and email LIKE CONCAT('%', #{params.email}, '%')
        </if>
        <if test="params.phone != null and params.phone != ''">
            and phone LIKE CONCAT('%', #{params.phone}, '%')
        </if>
        <if test="params.enabled != null">
            and enabled = #{params.enabled}
        </if>
    </select>
</mapper>